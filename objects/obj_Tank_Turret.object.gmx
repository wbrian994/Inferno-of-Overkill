<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Tank_Turret</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup Turret
if(global.is_christmas)
{
    sprite_index = spr_Christmas_Tank_Turret;
}
tank = noone;
angle_target = 0;
turn_speed = 60 / room_speed;

turret_tip_off_x = (sprite_width - sprite_xoffset);
turret_tip_x = -1;
turret_tip_y = -1;

offset[0] = -1;
offset[1] = -1;


can_fire = true;
cooled_down = true;
cooldown_time = 1.25 * room_speed;
show_muzzle_flash = false;

image_speed = 0;

//Tank Shell Options
too_close = false;
muzzle_velocity = 25;
explosion_accuracy = 50;

//Controls
mouse_fire = mb_left;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Smoke Effects
effect_create_above(ef_smoke,turret_tip_x,turret_tip_y,1,c_gray);
effect_create_below(ef_smoke,turret_tip_x,turret_tip_y,2,c_dkgray);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cool Down
cooled_down = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>tank != noone &amp;&amp; tank.can_drive</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction += turn_towards(direction,angle_target,turn_speed);
var tip_offset = get_offset(direction,turret_tip_off_x,0);
turret_tip_x = x + tip_offset[0];
turret_tip_y = y + tip_offset[1];

turret_tip_off_x = (sprite_width - sprite_xoffset);

too_close = (collision_circle(mouse_x,mouse_y,explosion_accuracy,obj_Tank,false,false) == tank);

can_fire = cooled_down &amp;&amp; !too_close;

if(can_fire &amp;&amp; mouse_check_button_pressed(mouse_fire))
{
    var shell = instance_create(turret_tip_x,turret_tip_y,obj_Tank_Shell);
    shell.speed = 25;
    shell.direction = direction;
    shell.range = point_distance(turret_tip_x,turret_tip_y,mouse_x,mouse_y) + random_range(-explosion_accuracy,explosion_accuracy);

    image_speed = 0.75;
    cooled_down = false;
    alarm[0] = cooldown_time;
    audio_play_sound(snd_Tank_Fire,0.6,false);
    show_muzzle_flash = true;
    
    global.shake_camera_amount = 40;
    global.shake_camera = 3;
    
    part_type_direction(global.part_spark,direction - 45,direction + 45,0,0);
    part_particles_create(global.part_system_above,turret_tip_x,turret_tip_y,global.part_spark,20);
    
    alarm[1] = 1; //Smoke Effects
}

image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>tank != noone &amp;&amp; tank.can_drive</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if(!too_close)
    draw_set_color(c_lime);
else
    draw_set_color(c_red);
draw_set_alpha(0.4);
var dist = point_distance(x,y,mouse_x,mouse_y);
draw_circle(x + lengthdir_x(dist,direction),y + lengthdir_y(dist,direction),explosion_accuracy,false);
draw_set_alpha(1);
draw_set_color(c_black);
draw_circle(mouse_x,mouse_y,explosion_accuracy,true);

if(show_muzzle_flash)
{
    draw_sprite_ext(spr_Tank_Muzzle_Flash,0,turret_tip_x,turret_tip_y,1,1,direction,c_white,1);
    show_muzzle_flash = false;
    tank.show_muzzle_flash = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>45,36</point>
    <point>84,84</point>
  </PhysicsShapePoints>
</object>
