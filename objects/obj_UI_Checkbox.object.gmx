<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_UI</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
//Stuff
has_label = false;
label_text = "Checkbox";
label_pos = "right";
label_padding = 10;
label = noone;
size = 20;
line_thickness = 2;
color = c_red;
checked = false;
state_changed = false;
Init = false;
initialized = false;

//Usage stuff
hover = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update
if(Init &amp;&amp; !initialized)
{
    if(has_label)
    {
        switch(label_pos)
        {
            case "right":
                label = instance_create(x + size + label_padding,y + size / 2,obj_UI_Label);
                label.valign = fa_middle;
                label.Text = label_text;
                break;
            case "left":
                label = instance_create(x - label_padding,y + size / 2,obj_UI_Label);
                label.valign = fa_middle;
                label.halign = fa_right;
                label.Text = label_text;
                break;
        }
    }
    Init = false;
    initialized = true;
}
state_changed = false;

mouse[1] = window_mouse_get_y();
mouse[0] = window_mouse_get_x();
hover = ((mouse[0] &gt;= x &amp;&amp; mouse[0] &lt;= x + size) &amp;&amp; (mouse[1] &gt;= y &amp;&amp; mouse[1] &lt;= y + size));

if(hover &amp;&amp; mouse_check_button_pressed(mb_left))
{
    checked = !checked;
    state_changed = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_rectangle(x,y,x + size,y + size,true);
if(checked)
{
    draw_set_color(color);
    var startx = x + size / 2;
    var starty = y + size / 1.25;
    draw_line_width(startx,starty,startx + lengthdir_x(size / 2, 135),starty + lengthdir_y(size / 2, 135),line_thickness);
    draw_line_width(startx,starty,startx + lengthdir_x(size,45),starty + lengthdir_y(size,45),line_thickness);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
