<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroy = false;
recreate = false;

ww = view_wview[0];
hh = view_hview[0];

master_vol = instance_create(ww / 2 - 250,hh / 2 - 20,obj_UI_Slider);
master_vol.percentage = global.volume * 100;
master_vol.set_val = true;
vol_label = instance_create(ww / 2 - 250,hh / 2 - 50,obj_UI_Label);
vol_label.Text = "Master Volume:";
music_vol = instance_create(ww / 2 - 250,hh / 2 + 40,obj_UI_Slider);
music_vol.width = music_vol.width / 2 - 10;
music_vol.percentage = global.music_volume * 100;
music_vol.set_val = true;
music_vol_label = instance_create(ww / 2 - 250,hh / 2 + 10,obj_UI_Label);
music_vol_label.Text = "Music Volume:";
sound_vol = instance_create(ww / 2 - 250 + music_vol.width + 20,hh / 2 + 40,obj_UI_Slider);
sound_vol.width = music_vol.width;
sound_vol.percentage = global.snd_volume * 100;
sound_vol.set_val = true;
sound_vol_label = instance_create(ww / 2 - 250 + music_vol.width + 20,hh / 2 + 10,obj_UI_Label);
sound_vol_label.Text = "Sound Volume:";

back_button = instance_create(10,hh,obj_UI_Button);
back_button.y -= back_button.Height;
back_button.Text = "Back";
if(!global.is_christmas)
    back_button.sprite = spr_Back_Button;
else
    back_button.sprite = spr_Christmas_Back_Button;
back_button.xScale = 0.3;
back_button.yScale = 0.3;
if(!global.is_christmas)
    back_button.grow_scale = 0.05;
else
    back_button.grow_scale = 0.03;
back_button.init = true;

save_label = instance_create(ww / 2,hh - 10,obj_UI_Label);
save_label.Text = "Settings are saved automagically";
save_label.halign = fa_center;
save_label.valign = fa_bottom;
save_label.color = c_yellow;

full_checkbox = instance_create(ww / 2 - 250,hh / 2 + 80,obj_UI_Checkbox);
full_checkbox.has_label = true;
full_checkbox.label_text = "Fullscreen";
full_checkbox.checked = global.fullscreen;
full_checkbox.Init = true;

fullscreen_checkbox = instance_create(ww / 2 - 250 + music_vol.width + 20,hh / 2 + 80,obj_UI_Checkbox);
fullscreen_checkbox.has_label = true;
fullscreen_checkbox.label_text = "Start In Fullscreen";
ini_open(DIR_DATA + INI_SETTINGS);
fullscreen_checkbox.checked = (ini_read_string(SECT_SCREEN,KEY_FULLSCREEN,"false") == "true");
fullscreen = fullscreen_checkbox.checked;
ini_close();
fullscreen_checkbox.Init = true;

christmas_checkbox = instance_create(ww / 2 - 250,hh / 2 + 110,obj_UI_Checkbox);
christmas_checkbox.has_label = true;
christmas_checkbox.label_text = "Christmas Mode";
christmas_checkbox.checked = global.is_christmas;
christmas_checkbox.Init = true;

intro_checkbox = instance_create(ww / 2 - 250 + music_vol.width + 20,hh / 2 + 110,obj_UI_Checkbox);
intro_checkbox.has_label = true;
intro_checkbox.label_text = "Do NOT Show Opening Cutscene";
intro_checkbox.checked = !global.show_intro;
intro_checkbox.Init = true;

persistant_checkbox = instance_create(ww / 2 - 250,hh / 2 + 140,obj_UI_Checkbox);
persistant_checkbox.has_label = true;
persistant_checkbox.label_text = "Persistant Debris";
persistant_checkbox.checked = global.persistant_debris;
persistant_checkbox.Init = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open(DIR_DATA + INI_SETTINGS);
ini_write_real(SECT_AUDIO,KEY_VOLUME,global.volume);
ini_write_real(SECT_AUDIO,KEY_M_VOLUME,global.music_volume);
ini_write_real(SECT_AUDIO,KEY_S_VOLUME,global.snd_volume);
if(fullscreen)
{
    ini_write_string(SECT_SCREEN,KEY_FULLSCREEN,"true");
}
else
{
    ini_write_string(SECT_SCREEN,KEY_FULLSCREEN,"false");
}
if(global.show_intro)
{
    ini_write_string(SECT_DATA,KEY_SHOW_INTRO,"true");
}
else
{
    ini_write_string(SECT_DATA,KEY_SHOW_INTRO,"false");
}
if(global.persistant_debris)
{
    ini_write_string(SECT_SCREEN,KEY_PERSISTANCE,"true");
}
else
{
    ini_write_string(SECT_SCREEN,KEY_PERSISTANCE,"false");
}
ini_close();

if(recreate)
{
    var new = instance_create(0,0,obj_Options_Menu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(destroy)
{
    with(obj_UI)
    {
        instance_destroy();
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.volume = master_vol.percentage / 100;
global.music_volume = music_vol.percentage / 100;
global.snd_volume = sound_vol.percentage / 100;

if(fullscreen_checkbox.state_changed)
{
    fullscreen = fullscreen_checkbox.checked;
}
if(full_checkbox.state_changed)
{
    if(global.fullscreen != full_checkbox.checked)
    {
        fullscreen_toggle();
    }
}
if(intro_checkbox.state_changed)
{
    global.show_intro = !intro_checkbox.checked;
}
if(persistant_checkbox.state_changed)
{
    global.persistant_debris = persistant_checkbox.checked;
}
if(christmas_checkbox.state_changed)
{
    global.is_christmas = christmas_checkbox.checked;
    if(global.is_christmas)
    {
        instance_create(0,0,obj_lightmap);
        repeat(10)
        {
            instance_create(irandom(ww),irandom(hh),obj_twinkle_light);
        }
        background_index[1] = back_snow;
        background_index[2] = back_snow;
        
        stop_all_music();
        var snd = play_music(snd_MainMenu_Music_Christmas,true);
        audio_sound_gain(snd,0,0);
        audio_sound_gain(snd,global.music_volume,1000);
        
        if(instance_exists(obj_MainMenu_Controller))
        {
            obj_MainMenu_Controller.title_sprite = spr_Christmas_Title;
        }
    }
    else
    {
        cleanup_lighting();
        background_index[1] = back_smoke_one;
        background_index[2] = back_smoke_one;
        
        stop_all_music();
        var snd = play_music(snd_MainMenu_Music,true);
        audio_sound_gain(snd,0,0);
        audio_sound_gain(snd,global.music_volume,1000);
        
        if(instance_exists(obj_MainMenu_Controller))
        {
            obj_MainMenu_Controller.title_sprite = spr_Title;
        }
    }
    destroy = true;
    recreate = true;
}

if(global.fullscreen_changed)
{
    destroy = true;
    recreate = true;
}

if(keyboard_check_pressed(vk_escape) || back_button.leftreleased)
{
    with(obj_UI)
    {
        instance_destroy();
    }
    instance_create(0,0,obj_Main_Menu);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
