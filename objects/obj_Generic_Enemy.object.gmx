<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Generic_Enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
image_speed = 0;
image_blend = c_red;
team = TEAM_ENEMY;
gun = instance_create(x,y,obj_Enemy_Pistol);
gun.owner = self.id;
see_player = false;
target = -1;
in_vehicle = noone;
on_vehicle = false;

//States
wandering = 0;
attacking_player = 1;
currentState = wandering;

//Health
max_hp = 25;
hp = max_hp;

//Sight
range_of_sight = 45;
sight_distance = 800;

//Debug
draw_debug_assists = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wander State Init
wander_size = 200;
wander_area[0] = x - wander_size;
wander_area[1] = y - wander_size;
wander_area[2] = x + wander_size;
wander_area[3] = y + wander_size;

decision_time = 15 * room_speed;
wander_target[0] = irandom_range(wander_area[0],wander_area[2]);
wander_target[1] = irandom_range(wander_area[1],wander_area[3]);
wander_speed = 3;
counter = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// NAV INIT
has_nav = false;
nav = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drops
event_inherited(); //Run Parent Event

//drops
if(irandom(100) &lt;= 4)
{
    instance_create(x,y,obj_Health_Pack);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// NAV
if(nav != noone)
{
    with(nav)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = c_red;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///No Target for Five Seconds
currentState = wandering;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//DIE
if(hp &lt;= 0)
{
    var body = instance_create(x,y,obj_Generic_Enemy_Dead);
    body.image_angle = image_angle + 180;
    body.direction = direction;
    body.speed = speed;
    instance_destroy();
}

var range = 200;
if(x &gt; view_xview[0] - range &amp;&amp; x &lt; view_xview[0] + view_wview[0] + range &amp;&amp; y &gt; view_yview[0] - range &amp;&amp; y &lt; view_yview[0] + view_hview[0] + range)
{
    var detect = false;
    for(var i = range_of_sight; i &gt;= -range_of_sight; i--)
    {
        if(collision_line(x,y,x + lengthdir_x(sight_distance,image_angle + i),y + lengthdir_y(sight_distance,image_angle + i),obj_Unit_Par,false,true))
        {
            var obj = collision_line(x,y,x + lengthdir_x(sight_distance,image_angle + i),y + lengthdir_y(sight_distance,image_angle + i),obj_Unit_Par,false,true);
            var dist = point_distance(x,y,obj.x,obj.y);
            if(!collision_line(x,y,x + lengthdir_x(dist,image_angle + i),y + lengthdir_y(dist,image_angle + i),obj_solid,false,true) &amp;&amp; obj != noone &amp;&amp; obj.team != team)
            {
                detect = true;
                break;
            }
        }
    }
    see_player = detect;
    
    //States
    switch(currentState)
    {
        case wandering:
            if(see_player)
            {
                currentState++;
                break;
            }
            if(counter &gt;= decision_time)
            {
                do
                {
                    wander_target[0] = irandom_range(wander_area[0],wander_area[2]);
                    wander_target[1] = irandom_range(wander_area[1],wander_area[3]);
                    counter = 0;
                }until(place_empty(wander_target[0],wander_target[1]))
            }
            
            var dist = point_distance(x,y,wander_target[0],wander_target[1]);
            var mv_speed;
            if(dist &gt; 5)
            {
                var dir = point_direction(x,y,wander_target[0],wander_target[1]); 
                image_angle += turn_towards(image_angle,dir,min(angle_difference(image_angle,dir),180 / room_speed));
                if(dist &lt; wander_speed)
                {
                    mv_speed = dist;
                }
                else
                {
                    mv_speed = wander_speed;
                }
            }
            else
            {
                mv_speed = 0;
            }
            mp_potential_step_object(wander_target[0],wander_target[1],mv_speed,obj_collidable);
            counter++;
            break;
        case attacking_player:
            scr_AI_Find_Target();
            scr_AI_Shoot_Target();
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// NAV
if(nav != noone)
{
    nav.x = x;
    nav.y = y;
}
if(nav != noone &amp;&amp; !has_nav)
{
    with(nav)
    {
        instance_destroy();
    }
}
if(nav == noone &amp;&amp; has_nav)
{
    nav = instance_create(x,y,obj_Nav_Point);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//GET OUT OF SOLIDS!
x += lengthdir_x(6,point_direction(other.x+16,other.y+16,x,y)-5+random(10));
y += lengthdir_y(6,point_direction(other.x+16,other.y+16,x,y)-5+random(10));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Unit_Par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//GET OUT OF SOLIDS!
x += lengthdir_x(6,point_direction(other.x+16,other.y+16,x,y)-5+random(10));
y += lengthdir_y(6,point_direction(other.x+16,other.y+16,x,y)-5+random(10));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///look towards bullet direction
var dir = other.direction + 180;
if(currentState == wandering)
{
    image_angle = dir;
}

if(other.owner != self.id)
{
    image_blend = c_white;
    alarm[1] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.draw_debug)
{
    //wander
    if(currentState == wandering)
    {
        draw_set_alpha(0.6);
        draw_set_color(c_purple);
        draw_rectangle(wander_area[0],wander_area[1],wander_area[2],wander_area[3],false);
        draw_set_alpha(1);
        draw_rectangle(wander_area[0],wander_area[1],wander_area[2],wander_area[3],true);
        draw_set_color(c_blue);
        draw_circle(wander_target[0],wander_target[1],4,false);
    }
    else
    {
        if(target != -1 &amp;&amp; instance_exists(target))
        {
            draw_set_color(c_red);
            draw_set_alpha(0.4);
            draw_circle(target.x,target.y,100,false);
            draw_set_alpha(1);
        }
    }
    
    if(see_player)
    {
        draw_set_color(c_red);
    }
    else
    {
        draw_set_color(c_white);
    }
    draw_line(x,y,x + lengthdir_x(sight_distance,image_angle - range_of_sight),y + lengthdir_y(sight_distance,image_angle - range_of_sight));
    draw_line(x,y,x + lengthdir_x(sight_distance,image_angle + range_of_sight),y + lengthdir_y(sight_distance,image_angle + range_of_sight));
    draw_line(x + lengthdir_x(sight_distance,image_angle - range_of_sight),y + lengthdir_y(sight_distance,image_angle - range_of_sight),x + lengthdir_x(sight_distance,image_angle + range_of_sight),y + lengthdir_y(sight_distance,image_angle + range_of_sight));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.draw_debug)
{
    //wander
    if(currentState == wandering)
    {
        draw_set_alpha(0.6);
        draw_set_color(c_purple);
        draw_rectangle(wander_area[0],wander_area[1],wander_area[2],wander_area[3],false);
        draw_set_alpha(1);
        draw_rectangle(wander_area[0],wander_area[1],wander_area[2],wander_area[3],true);
        draw_set_color(c_blue);
        draw_circle(wander_target[0],wander_target[1],4,false);
    }
    
    if(see_player)
    {
        draw_set_color(c_red);
    }
    else
    {
        draw_set_color(c_white);
    }
    draw_line(x,y,x + lengthdir_x(sight_distance,image_angle - range_of_sight),y + lengthdir_y(sight_distance,image_angle - range_of_sight));
    draw_line(x,y,x + lengthdir_x(sight_distance,image_angle + range_of_sight),y + lengthdir_y(sight_distance,image_angle + range_of_sight));
    draw_line(x + lengthdir_x(sight_distance,image_angle - range_of_sight),y + lengthdir_y(sight_distance,image_angle - range_of_sight),x + lengthdir_x(sight_distance,image_angle + range_of_sight),y + lengthdir_y(sight_distance,image_angle + range_of_sight));
}
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>23,23</point>
  </PhysicsShapePoints>
</object>
