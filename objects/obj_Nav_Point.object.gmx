<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Nav_Marker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
inner_rot = 0;
outer_rot = 90;
l3_rot = 45;
inner_rot_speed = -1.25;
outer_rot_speed = 0.75;
l3_rot_speed = 0.25;
scale = 0.75;
inner_color = c_red;
outer_color = c_orange;
l3_color = c_yellow;

destroy_when_near = false;
near_range = 150;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rotate Circles
inner_rot += inner_rot_speed;
outer_rot += outer_rot_speed;
l3_rot += l3_rot_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy When Near
if(destroy_when_near)
{
    if(instance_exists(obj_Player) &amp;&amp; point_distance(obj_Player.x,obj_Player.y,x,y) &lt;= near_range)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xPos,yPos;
xPos = ((x - view_xview[0]) * global.default_camera_zoom) * global.camera_zoom;
yPos = ((y - view_yview[0]) * global.default_camera_zoom) * global.camera_zoom;
if((xPos &gt;= 0 &amp;&amp; xPos &lt;= view_wview[0]) &amp;&amp; (yPos &gt;= 0 &amp;&amp; yPos &lt;= view_hview[0]))
{
    //draw inner circle
    draw_sprite_ext(spr_Nav_Point,0,xPos,yPos,scale,scale,inner_rot,inner_color,1);
    //draw outer circle
    draw_sprite_ext(spr_Nav_Point,1,xPos,yPos,scale,scale,outer_rot,outer_color,1);
    //draw layer 3
    draw_sprite_ext(spr_Nav_Point,2,xPos,yPos,scale,scale,l3_rot,l3_color,1);
}
else
{
    var centerX, centerY, angle, xpoint, ypoint;
    centerX =(view_wview[0] / 2);
    centerY = (view_hview[0] / 2);
    angle = point_direction(view_xview[0] + centerX,view_yview[0] + centerY,x,y);
    xpoint = centerX + lengthdir_x(300,angle);
    ypoint = centerY + lengthdir_y(300,angle);
    draw_sprite_ext(spr_Nav_Arrow,0,xpoint,ypoint,1,1,angle,inner_color,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Don't Draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
