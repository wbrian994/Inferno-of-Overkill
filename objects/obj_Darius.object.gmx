<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Darius_Pistol</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
image_speed = 0;

//Vars
friction = 1;
maxWalkSpeed = 5;
acceleration = 1;

//Inventory
    //Constants
    pistol = 0;
    machine_gun = 1;
inventory_size = 2;
inv_current_slot = 0;
inv_prev_slot = -1;
inv[0] = instance_create(x,y,obj_Pistol);
inv[0].owner = self.id;
inv[0].bullet_x_offset = sprite_width - 14;
inv[0].bullet_y_offset = 2;
/* Temporariy starting with machine gun
for(var i = 1; i &lt; inventory_size; i++)
{
    inv[i] = -1;
}
*/
inv[1] = instance_create(x,y,obj_Machine_Gun);
inv[1].owner = self.id;
inv[1].bullet_x_offset = sprite_width;
inv[1].bullet_y_offset = -15;

//Keybindings
key_up = ord('W');
key_down = ord('S');
key_left = ord('A');
key_right = ord('D');
mouse_fire = mb_left;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = look_target;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update
look_target = point_direction(x,y,mouse_x,mouse_y);

if(keyboard_check(key_up))
{
    if(abs(vspeed) &lt;= maxWalkSpeed)
    {
        vspeed = max(vspeed - (acceleration + friction),-maxWalkSpeed);
    }
}
if(keyboard_check(key_down))
{
    if(abs(vspeed) &lt;= maxWalkSpeed)
    {
        vspeed = min(vspeed + (acceleration + friction),maxWalkSpeed);
    }
}
if(keyboard_check(key_left))
{
    if(abs(hspeed) &lt;= maxWalkSpeed)
    {
        hspeed = max(hspeed - (acceleration + friction),-maxWalkSpeed);
    }
}
if(keyboard_check(key_right))
{
    if(abs(hspeed) &lt;= maxWalkSpeed)
    {
        hspeed = min(hspeed + (acceleration + friction),maxWalkSpeed);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Inventory
if(keyboard_check_pressed(ord('1')))
{
    if(inv[0] != -1)
    {
        inv_current_slot = 0;
    }
}
if(keyboard_check_pressed(ord('2')))
{
    if(inv[1] != -1)
    {
        inv_current_slot = 1;
    }
}
if(inv_prev_slot != inv_current_slot)
{
    switch(inv_current_slot)
    {
        case 0:
            sprite_index = spr_Darius_Pistol;
            muzzle_flash = spr_Pistol_Muzzle_Flash;
            break;
        case 1:
            sprite_index = spr_Darius_Machine_Gun;
            muzzle_flash = spr_Pistol_Muzzle_Flash;
            break;
    }
    instance_activate_object(inv[inv_current_slot]);
    for(var i = 0; i &lt; inventory_size;i++)
    {
        if(i != inv_current_slot)
        {
            instance_deactivate_object(inv[i]);
        }
    }
    inv_prev_slot = inv_current_slot;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>15,16</point>
    <point>23,23</point>
  </PhysicsShapePoints>
</object>
