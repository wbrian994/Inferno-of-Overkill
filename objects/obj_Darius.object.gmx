<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Darius_Pistol</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
image_speed = 0;
team = TEAM_FRIENDLY;

//Vars
friction = 1;
maxWalkSpeed = 5;
acceleration = 1;

//Inventory
    //Constants
    pistol = 0;
    machine_gun = 1;
    shotgun = 2;
    laser_rifle = 8;
inventory_size = 9;
inv_current_slot = 0;
inv_prev_slot = -1;
//Clear all inventory slots and add pistol
for(var i = 0; i &lt; inventory_size; i++)
{
    inv[i] = -1;
}

max_hp = 50;
hp = max_hp;

inv[0] = instance_create(x,y,obj_Pistol);
inv[0].owner = self.id;
inv[0].bullet_x_offset = sprite_width - 14;
inv[0].bullet_y_offset = 2;


//Keybindings
key_up = ord('W');
key_down = ord('S');
key_left = ord('A');
key_right = ord('D');
mouse_fire = mb_left;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += turn_towards(image_angle,look_target,45);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update
var look_offset = get_offset(point_direction(x,y,mouse_x,mouse_y),0,inv[inv_current_slot].bullet_y_offset);
look_target = point_direction(x + look_offset[0],y + look_offset[1],mouse_x,mouse_y);

if(keyboard_check(key_up))
{
    if(abs(vspeed) &lt;= maxWalkSpeed)
    {
        vspeed = max(vspeed - (acceleration + friction),-maxWalkSpeed);
    }
}
if(keyboard_check(key_down))
{
    if(abs(vspeed) &lt;= maxWalkSpeed)
    {
        vspeed = min(vspeed + (acceleration + friction),maxWalkSpeed);
    }
}
if(keyboard_check(key_left))
{
    if(abs(hspeed) &lt;= maxWalkSpeed)
    {
        hspeed = max(hspeed - (acceleration + friction),-maxWalkSpeed);
    }
}
if(keyboard_check(key_right))
{
    if(abs(hspeed) &lt;= maxWalkSpeed)
    {
        hspeed = min(hspeed + (acceleration + friction),maxWalkSpeed);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Inventory
//Keys
if(keyboard_check_pressed(ord('1')))
{
    if(inv[0] != -1)
    {
        inv_current_slot = 0;
    }
}
if(keyboard_check_pressed(ord('2')))
{
    if(inv[1] != -1)
    {
        inv_current_slot = 1;
    }
}
if(keyboard_check_pressed(ord('3')))
{
    if(inv[2] != -1)
    {
        inv_current_slot = 2;
    }
}
if(keyboard_check_pressed(ord('9')))
{
    if(inv[8] != -1)
    {
        inv_current_slot = 8;
    }
}

//Slot Changed
if(inv_prev_slot != inv_current_slot)
{
    switch(inv_current_slot)
    {
        case 0:
            sprite_index = spr_Darius_Pistol;
            break;
        case 1:
            sprite_index = spr_Darius_Machine_Gun;
            break;
        case 2:
            sprite_index = spr_Darius_Shotgun;
            break;
        case 8:
            sprite_index = spr_Darius_Laser_Rifle;
            break;
    }
    instance_activate_object(inv[inv_current_slot]);
    for(var i = 0; i &lt; inventory_size;i++)
    {
        if(i != inv_current_slot &amp;&amp; inv[i] != -1)
        {
            instance_deactivate_object(inv[i]);
        }
    }
    inv_prev_slot = inv_current_slot;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//GET OUT OF SOLIDS!
x += lengthdir_x(6,point_direction(other.x+32,other.y+32,x,y)-5+random(10));
y += lengthdir_y(6,point_direction(other.x+32,other.y+32,x,y)-5+random(10));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Laser_Rifle_Pickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(inv[laser_rifle] == -1)
{
    inv[laser_rifle] = instance_create(x,y,obj_Laser_Rifle);
    instance_deactivate_object(inv[laser_rifle]);
    inv[laser_rifle].owner = self.id;
    inv[laser_rifle].bullet_x_offset = sprite_width - 14;
    inv[laser_rifle].bullet_y_offset = -10;
    other.ammo = 0; //destroys pickup
    if(inv_current_slot &lt; laser_rifle)
    {
        inv_current_slot = laser_rifle;
    }
    
    //text
    var text = instance_create(x,y,obj_Pickup_Text);
    text.Text = "Picked Up Laser Rifle";
    text.color = c_lime;
}
else
{
    if(inv[laser_rifle].max_ammo != -1)
    {
        var amount = min(inv[laser_rifle].max_ammo - inv[laser_rifle].ammo,other.ammo);
        inv[laser_rifle].ammo += amount;
        other.ammo -= amount;
        if(amount &gt; 0)
        {
            var text = instance_create(x,y,obj_Pickup_Text);
            text.Text = "+" + string(amount) + " Battery";
            text.color = c_green;
        }
    }
    else
    {
        other.ammo = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Shotgun_Pickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(inv[shotgun] == -1)
{
    inv[shotgun] = instance_create(x,y,obj_Shotgun);
    instance_deactivate_object(inv[shotgun]);
    inv[shotgun].owner = self.id;
    inv[shotgun].bullet_x_offset = sprite_width - 10;
    inv[shotgun].bullet_y_offset = -15;
    other.ammo = 0; //destroys pickup
    if(inv_current_slot &lt; shotgun)
    {
        inv_current_slot = shotgun;
    }
    
    //text
    var text = instance_create(x,y,obj_Pickup_Text);
    text.Text = "Picked Up Shotgun";
    text.color = c_lime;
}
else
{
    if(inv[shotgun].max_ammo != -1)
    {
        var amount = min(inv[shotgun].max_ammo - inv[shotgun].ammo,other.ammo);
        inv[shotgun].ammo += amount;
        other.ammo -= amount;
        if(amount &gt; 0)
        {
            var text = instance_create(x,y,obj_Pickup_Text);
            text.Text = "+" + string(amount) + " Shotgun Shells";
            text.color = c_green;
        }
    }
    else
    {
        other.ammo = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Machine_Gun_Pickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(inv[machine_gun] == -1)
{
    inv[machine_gun] = instance_create(x,y,obj_Machine_Gun);
    instance_deactivate_object(inv[machine_gun]);
    inv[machine_gun].owner = self.id;
    inv[machine_gun].bullet_x_offset = sprite_width - 10;
    inv[machine_gun].bullet_y_offset = -15;
    other.ammo = 0; //destroys pickup
    if(inv_current_slot &lt; machine_gun)
    {
        inv_current_slot = machine_gun;
    }
    
    //text
    var text = instance_create(x,y,obj_Pickup_Text);
    text.Text = "Picked Up Machine Gun";
    text.color = c_lime;
}
else
{
    if(inv[machine_gun].max_ammo != -1)
    {
        var amount = min(inv[machine_gun].max_ammo - inv[machine_gun].ammo,other.ammo);
        inv[machine_gun].ammo += amount;
        other.ammo -= amount;
        if(amount &gt; 0)
        {
            var text = instance_create(x,y,obj_Pickup_Text);
            text.Text = "+" + string(amount) + " Machine Gun Ammo";
            text.color = c_green;
        }
    }
    else
    {
        other.ammo = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a = application_get_position();
var xx = a[0];
var yy = a[1];
var ww = a[2] - a[0];
var hh = a[3] - a[1];

draw_set_font(fnt_main);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_bottom);
var str = string(inv[inv_current_slot].name);
draw_text_outline(ww / 2,hh,str,2);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>15,16</point>
    <point>23,23</point>
  </PhysicsShapePoints>
</object>
