<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroy = false;
recreate = false;

title_sprite = spr_Fireproof_Logo;
wait_time = 10 * room_speed;
label_fade_time = 2 * room_speed;
text_fade_time = 3 * room_speed;
fade_out_time = room_speed;
timer = 0;
alpha = 1;

var ww,hh;
if(global.fullscreen)
{
    ww = global.FXres;
    hh = global.FYres;
}
else
{
    ww = global.WXres;
    hh = global.WYres;
}

label = instance_create(ww / 2, hh / 2,obj_UI_Label)
label.Text = "Loading...";
label.color = c_white;
label.halign = fa_center;
label.valign = fa_middle;
label.alpha = 0;

text = instance_create(ww / 2, hh / 2 + 30,obj_UI_Label)
text.Text = "Please wait while we test your patience ;)##The actions portrayed in this video game are for entertainment purposes only";
text.color = c_white;
text.halign = fa_center;
text.alpha = 0;

var bar = instance_create(ww,hh,obj_loading_bar);
bar.halign = fa_right;
bar.valign = fa_bottom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(recreate)
{
    var new = instance_create(0,0,obj_Loading_Screen);
    new.timer = timer;
}else
{
    room_goto(rm_Menu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(destroy)
{
    with(obj_UI)
    {
        instance_destroy();
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer++;
if(timer &gt;= wait_time)
{
    destroy = true;
}

label.alpha = lerp(0,1,(clamp(timer,0,label_fade_time) / label_fade_time));
text.alpha = lerp(0,1,(clamp(timer,0,text_fade_time) / text_fade_time));

if(timer &gt;= wait_time - fade_out_time)
{
    var new_alpha = lerp(1,0,(timer - wait_time + fade_out_time) / fade_out_time);
    with(obj_UI)
    {
        alpha = new_alpha;
    }
    alpha = new_alpha
}

if(global.fullscreen_changed)
{
    destroy = true;
    recreate = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a = application_get_position();
var xx = a[0];
var yy = a[1];
var ww = a[2] - a[0];
var hh = a[3] - a[1];

if(title_sprite != -1)
{
    var scale = ((view_wview[0] - (2 * (ww * 0.1))) / sprite_get_width(title_sprite));
    draw_sprite_ext(title_sprite,0,xx + ww / 2 - ((sprite_get_width(title_sprite) * scale) / 2), yy + 5,scale,scale,0,c_white,alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
